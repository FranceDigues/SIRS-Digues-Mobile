!function (a, b, c) {
    "use strict";
    function d() {
        var a = {}, d = this.defaults = {
            options: function () {
                return {
                    layers: [new c.layer.Tile({source: new c.source.OSM})],
                    view: new c.View({center: [0, 0], zoom: 1})
                }
            }
        };
        this.provideOptions = function (b, c) {
            a[b] = c
        }, this.$get = ["$injector", function (c) {
            function e(a, d) {
                return b.isString(a) ? c.get(a) : b.isArray(a) || b.isFunction(a) ? c.invoke(a, null, d) : a
            }

            var f = {};
            return {
                get: function (a) {
                    return f[a]
                }, _getOptions_: function (b, c) {
                    return e(a[b], c) || e(d.options, c) || {}
                }, _add_: function (a, b) {
                    f[a] = b
                }, _remove_: function (a) {
                    delete f[a]
                }
            }
        }]
    }

    function e(a) {
        return {
            restrict: "ECA", link: function (b, d, e) {
                function f() {
                    a._add_(h, l), b.$eval(i, {map: l}), l.un("postrender", f, l)
                }

                function g() {
                    b.$eval(j, {map: l}), l.setTarget(null), a._remove_(h)
                }

                var h = e.olMap || e.name || e.id, i = e.onready || "", j = e.ondispose || "", k = a._getOptions_(h, {element: d});
                k.target = d[0];
                var l = new c.Map(k);
                l.on("postrender", f, l), d.on("$destroy", g)
            }
        }
    }

    b.module("ol", ["ng"]).provider("olMap", d).directive("olMap", e), e.$inject = ["olMap"]
}(window, window.angular, window.ol);